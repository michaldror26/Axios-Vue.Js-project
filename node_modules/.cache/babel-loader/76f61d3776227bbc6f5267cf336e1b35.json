{"remainingRequest":"/home/compie/WebstormProjects/secondP_axios/axios-project/node_modules/babel-loader/lib/index.js!/home/compie/WebstormProjects/secondP_axios/axios-project/node_modules/eslint-loader/index.js??ref--13-0!/home/compie/WebstormProjects/secondP_axios/axios-project/src/store.js","dependencies":[{"path":"/home/compie/WebstormProjects/secondP_axios/axios-project/src/store.js","mtime":1533735994940},{"path":"/home/compie/WebstormProjects/secondP_axios/axios-project/node_modules/cache-loader/dist/cjs.js","mtime":1533632816525},{"path":"/home/compie/WebstormProjects/secondP_axios/axios-project/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/compie/WebstormProjects/secondP_axios/axios-project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from './axios-auth';\nimport globalAxios from 'axios';\nimport router from './router';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    idToken: null,\n    userId: null,\n    user: null\n  },\n  mutations: {\n    authUser: function authUser(state, userData) {\n      state.idToken = userData.token;\n      state.userId = userData.userId;\n    },\n    storeUser: function storeUser(state, user) {\n      state.user = user;\n    },\n    clearAuthData: function clearAuthData(state) {\n      state.idToken = null;\n      state.userId = null;\n    }\n  },\n  actions: {\n    signup: function signup(_ref, authData) {\n      var commit = _ref.commit,\n          dispatch = _ref.dispatch;\n      axios.post('/signupNewUser?key=AIzaSyBxAcAmRNCzn04XO25rf6cqm2LC6kVSJrc', {\n        email: authData.email,\n        password: authData.password,\n        returnSecureToken: true\n      }).then(function (res) {\n        console.log(res);\n        commit('authUser', {\n          //update token\n          token: res.data.idToken,\n          userId: res.data.localId\n        });\n        localStorage.setItem('token', res.data.idToken);\n        localStorage.setItem('userId', res.data.localId);\n        localStorage.setItem('expirationDate', res.data.expi);\n        dispatch('storeUser', authData); //store new user in database\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    login: function login(_ref2, authData) {\n      var commit = _ref2.commit;\n      axios.post('/verifyPassword?key=AIzaSyBxAcAmRNCzn04XO25rf6cqm2LC6kVSJrc', {\n        email: authData.email,\n        password: authData.password,\n        returnSecureToken: true\n      }).then(function (res) {\n        console.log(res);\n        commit('authUser', {\n          //update token\n          token: res.data.idToken,\n          userId: res.data.localId\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    storeUser: function storeUser(_ref3, userData) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n\n      if (!state.idToken) {\n        return;\n      }\n\n      globalAxios.post(\"/users.json\" + '?auth=' + state.idToken, userData).then(function (res) {\n        return console.log(res);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    fetchUser: function fetchUser(_ref4) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n\n      if (!state.idToken) {\n        return;\n      }\n\n      globalAxios.get('/users.json' + '?auth=' + state.idToken).then(function (res) {\n        console.log(res);\n        var data = res.data;\n        var users = [];\n\n        for (var key in data) {\n          var user = data[key];\n          user.id = key;\n          users.push(user);\n        }\n\n        console.log(users);\n        console.log(users[0]); // this.email = users[0].email\n\n        commit('storeUser', users[0]);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    logout: function logout(_ref5) {\n      var commit = _ref5.commit;\n      commit('clearAuthData');\n      router.replace('/signin');\n    },\n    tryAutoLogin: function tryAutoLogin(_ref6) {\n      var commit = _ref6.commit;\n    }\n  },\n  getters: {\n    user: function user(state) {\n      return state.user;\n    },\n    isAuthenticated: function isAuthenticated(state) {\n      return state.idToken !== null;\n    }\n  }\n});",{"version":3,"sources":["src/store.js"],"names":["Vue","Vuex","axios","globalAxios","router","use","Store","state","idToken","userId","user","mutations","authUser","userData","token","storeUser","clearAuthData","actions","signup","authData","commit","dispatch","post","email","password","returnSecureToken","then","console","log","res","data","localId","localStorage","setItem","expi","catch","error","login","fetchUser","get","users","key","id","push","logout","replace","tryAutoLogin","getters","isAuthenticated"],"mappings":"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","sourceRoot":"/home/compie/WebstormProjects/secondP_axios/axios-project","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from './axios-auth'\nimport globalAxios from 'axios'\nimport router from './router'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        idToken: null,\n        userId: null,\n        user: null\n    },\n    mutations: {\n        authUser(state, userData) {\n            state.idToken = userData.token;\n            state.userId = userData.userId;\n\n        },\n        storeUser(state, user) {\n            state.user = user;\n        },\n        clearAuthData(state) {\n            state.idToken = null;\n            state.userId = null;\n        }\n\n    },\n    actions: {\n        signup({commit, dispatch}, authData) {\n            axios.post('/signupNewUser?key=AIzaSyBxAcAmRNCzn04XO25rf6cqm2LC6kVSJrc',\n                {\n                    email: authData.email,\n                    password: authData.password,\n                    returnSecureToken: true\n                })\n                .then(res => {\n                    console.log(res);\n                    commit('authUser', {                //update token\n                        token: res.data.idToken,\n                        userId: res.data.localId\n                    });\n\n                    localStorage.setItem('token', res.data.idToken);\n                    localStorage.setItem('userId', res.data.localId);\n                    localStorage.setItem('expirationDate', res.data.expi);\n\n                    dispatch('storeUser', authData);//store new user in database\n\n                })\n                .catch(error => console.log(error));\n        },\n        login({commit}, authData) {\n            axios.post('/verifyPassword?key=AIzaSyBxAcAmRNCzn04XO25rf6cqm2LC6kVSJrc',\n                {\n                    email: authData.email,\n                    password: authData.password,\n                    returnSecureToken: true\n                })\n                .then(res => {\n                    console.log(res);\n                    commit('authUser', {               //update token\n                        token: res.data.idToken,\n                        userId: res.data.localId\n                    })\n\n                })\n                .catch(error => console.log(error));\n        },\n        storeUser({commit, state}, userData) {\n            if (!state.idToken) {\n                return;\n            }\n            globalAxios.post(\"/users.json\" + '?auth=' + state.idToken, userData)\n                .then(res => console.log(res))\n                .catch(error => console.log(error));\n        },\n        fetchUser({commit, state}) {\n            if (!state.idToken) {\n                return;\n            }\n            globalAxios.get('/users.json' + '?auth=' + state.idToken)\n                .then(res => {\n                    console.log(res)\n                    const data = res.data\n                    const users = []\n                    for (let key in data) {\n                        const user = data[key]\n                        user.id = key\n                        users.push(user)\n                    }\n                    console.log(users)\n                    console.log(users[0])\n                    // this.email = users[0].email\n\n                    commit('storeUser', users[0]);\n                })\n                .catch(error => console.log(error))\n        },\n        logout({commit}) {\n            commit('clearAuthData');\n\n            router.replace('/signin');\n        },\n        tryAutoLogin({commit}) {\n\n        }\n    },\n    getters: {\n        user(state) {\n            return state.user;\n        },\n        isAuthenticated(state) {\n            return state.idToken !== null;\n        }\n    }\n})"]}]}